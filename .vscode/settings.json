{
  //!||----------------------------------------------------------------------<||
  //!|| ((GENERAL)) ||-------------------------------------------------------<||
  //!||----------------------------------------------------------------------<||
  //! APPEARANCE ||----------------------------------------------------------<||
  //*||====||   UI &Layout   ||===============================================||
  //? Disabled command center and use layout menu instead.
  // "window.commandCenter": false,
  // "workbench.layoutControl.type": "menu",
  // "workbench.activityBar.iconClickBehavior": "focus",
  // "workbench.activityBar.location": "top",
  //*||====||   Theme & Icons   ||============================================||
  //? Using the default dark theme with moxer-icons.
  // "workbench.colorTheme": "Default Dark Modern",
  //? Overriding the theme colors to the preferred dark colors.
  // "workbench.colorCustomizations": {
  //   "tree.indentGuidesStroke": "#6b7280", // gray-500
  //   "editorRuler.foreground": "#083344", // cyan-950
  //   "editor.background": "#171717", // neutral-900
  //   "panel.background": "#171717", // neutral-900
  //   "terminal.background": "#171717", // neutral-900
  //   "statusBar.background": "#171717" // neutral-900
  // },
  //*||====||   Font & Text   ||==============================================||
  //? Using JetBrainsMono Nerd Font as the primary font.
  // "editor.fontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "scm.inputFontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  // "chat.editor.fontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "debug.console.fontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "editor.codeLensFontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "notebook.output.fontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  // "markdown.preview.fontFamily": "Geist Mono",
  // "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font, Geist Mono",
  //? Enabling font ligatures. The merging of characters effect.
  // "editor.fontLigatures": true,
  //? Used pixel antialiased for a smoother and lighter font rendering.
  // "workbench.fontAliasing": "antialiased",
  //! STARTUP & INITIALIZATION ||--------------------------------------------<||
  //*||====||   Telemetry   ||================================================||
  //? Disabled the telemetry to prevent data collection.
  // "telemetry.telemetryLevel": "off",
  //*||====||   Startup   ||==================================================||
  //? Disabled the welcome page.
  // "workbench.startupEditor": "none",
  //? Don't restore any windows on startup.
  // "window.restoreWindows": "none",
  //*||====||   Accessibility   ||============================================||
  //? Disabling accessibility features to improve performance.
  "editor.accessibilitySupport": "off",
  "accessibility.hideAccessibleView": true,
  //! TOOLS & UTILITIES ||---------------------------------------------------<||
  //*||====||   Rulers   ||===================================================||
  //? Enabled the rulers to help with character count and line length.
  "editor.rulers": [
    80
  ],
  //*||====||   Minimap   ||==================================================||
  //? Enabled the minimap, but disabled rendering of characters and scrolling.
  // "editor.minimap.enabled": true,
  // "editor.minimap.renderCharacters": false,
  // "editor.minimap.size": "fit",
  //*||====||   Breadcrumbs   ||==============================================||
  //? Disabled breadcrumbs symbol path.
  "breadcrumbs.symbolPath": "off",
  //? Disable thinggy below breadcumbs, showing heading or parent function.
  "editor.stickyScroll.enabled": false,
  //*||====||   Colored Brackets   ||=========================================||
  //? Enabled the colored brackets to help with readability and navigation.
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.guides.bracketPairs": true,
  //*||====||   File Tree   ||================================================||
  //? Tree identation and guides.
  // "workbench.tree.indent": 12,
  // "workbench.tree.renderIndentGuides": "always",
  //? Open the file tree of the current file.
  "explorer.autoReveal": true,
  //*||====||   Terminal   ||=================================================||
  //? Using the zsh shell and Terminal.app as the default terminal.
  // "terminal.external.osxExec": "iTerm.app",
  // "terminal.integrated.defaultProfile.osx": "tmux-shell",
  // "terminal.integrated.profiles.osx": {
  //   "tmux-shell": {
  //     "path": "tmux",
  //     "args": [
  //       "new-session",
  //       "-A",
  //       "-s",
  //       "vscode:${workspaceFolderBasename}"
  //     ]
  //   }
  // },
  //*||====||   Editor & Files   ||===========================================||
  //? Guess the encoding of files.
  "files.autoGuessEncoding": true,
  //? Enabled the linked editing to help with refactoring.
  "editor.linkedEditing": true,
  //? Disable the explorer sticky scroll.
  "workbench.tree.enableStickyScroll": false,
  //? Files to exclude from the file tree. Or include.
  "files.exclude": {
    "**/.git": false
  },
  //*||====||   Test   ||=====================================================||
  "testing.autoRun.delay": 5000,
  //! EDITOR & CODING EXPERIENCE ||------------------------------------------<||
  //*||====||   Editor Limits   ||============================================||
  //? Enabled the limit of 5 editors to prevent clutter and improve focus.
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.value": 5,
  //*||====||   Spacing & Newlines   ||=======================================||
  //? Render whitespace characters to help with readability and debugging.
  "editor.renderWhitespace": "boundary",
  //? Trim trailing whitespace.
  "files.trimTrailingWhitespace": true,
  //? Insert a final newline at the end of the file.
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  //*||====||   Folding   ||=================================================||
  "editor.folding": false,
  //*||====||   Inline Suggest   ||===========================================||
  //? Enabled the inline suggest to help with code completion.
  "editor.inlineSuggest.enabled": true,
  //!||----------------------------------------------------------------------<||
  //!|| ((LANGUAGE & SPECIFIC SETTINGS)) ||----------------------------------<||
  //!||----------------------------------------------------------------------<||
  //? Check language identifiers via the docs.
  //? https://code.visualstudio.com/docs/languages/identifiers
  //! ALL LANGUAGES ||-------------------------------------------------------<||
  //? Tab size and indentation.
  "editor.tabSize": 2,
  "editor.indentSize": "tabSize",
  //? Disable the default formatter.
  "editor.defaultFormatter": null,
  //? Format the document on save and paste.
  "editor.formatOnSave": false,
  "editor.formatOnPaste": false,
  //? Highlight invisible characters to help with debugging and readability.
  "editor.unicodeHighlight.invisibleCharacters": true,
  //! Prettier ||------------------------------------------------------------<||
  // "prettier.documentSelectors": [
  //   "**/*.astro"
  // ],
  //! JSON ||----------------------------------------------------------------<||
  "[json]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "vscode.json-language-features",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! JSON with Comments ||--------------------------------------------------<||
  "[jsonc]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "vscode.json-language-features",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! MDX ||-----------------------------------------------------------------<||
  "[markdown]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! MDX ||-----------------------------------------------------------------<||
  "[mdx]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! JavaScript ||----------------------------------------------------------<||
  "javascript.updateImportsOnFileMove.enabled": "never",
  "javascript.autoClosingTags": true,
  "[javascript]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! JavaScript React ||----------------------------------------------------<||
  "[javascriptreact]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! TypeScript ||----------------------------------------------------------<||
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.updateImportsOnFileMove.enabled": "never",
  "typescript.autoClosingTags": true,
  "[typescript]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! TypeScript React ||----------------------------------------------------<||
  "[typescriptreact]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! Astro ||---------------------------------------------------------------<||
  // "[astro]": {
  //   "editor.defaultFormatter": "esbenp.prettier-vscode"
  // },
  //! CSS ||----------------------------------------------------------------<||
  "[css]": {
    "editor.suggest.insertMode": "replace"
  },
  //! Prisma ||--------------------------------------------------------------<||
  "[prisma]": {
    //? Tab size and identation.
    "editor.tabSize": 2,
    "editor.indentSize": "tabSize",
    //? Use prettier as the default formatter.
    "editor.defaultFormatter": "Prisma.prisma",
    //? Format the document on save and paste.
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  //! Python ||--------------------------------------------------------------<||
  // "[python]": {
  //   "editor.tabSize": 4,
  //   "editor.indentSize": "tabSize",
  //   "editor.defaultFormatter": "ms-python.python",
  //   "editor.formatOnSave": true,
  //   "editor.formatOnPaste": true
  // },
  //!||----------------------------------------------------------------------<||
  //!|| ((EXTENSIONS)) ||----------------------------------------------------<||
  //!||----------------------------------------------------------------------<||
  "extensions.autoUpdate": false,
  //! AUTO CLOSE TAGS ||-----------------------------------------------------<||
  "auto-close-tag.activationOnLanguage": [
    // "Astro",
    // "astro",
    "xml",
    "php",
    "blade",
    "ejs",
    "jinja",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "plaintext",
    "markdown",
    "vue",
    "liquid",
    "erb",
    "lang-cfml",
    "cfml",
    "HTML (EEx)",
    "HTML (Eex)",
    "plist"
  ],
  //! Git ||-----------------------------------------------------------------<||
  //? Enable commit signing.
  // "git.enableCommitSigning": true,
  //? Enable auto fetch and stash.
  "git.autofetch": true,
  "git.autoStash": true,
  "git.mergeEditor": true,
  //? Disable the confirmation of sync.
  "git.confirmSync": false,
  //? Show the push success notification.
  "git.showPushSuccessNotification": true,
  //! GitHub Copilot ||------------------------------------------------------<||
  // "github.copilot.enable": {
  //   "*": true,
  //   "plaintext": false,
  //   "markdown": true,
  //   "scminput": false,
  //   "python": true
  // },
  //! GitLens ||-------------------------------------------------------------<||
  // "gitlens.graph.minimap.additionalTypes": [
  //   "localBranches",
  //   "stashes",
  //   "tags",
  //   "remoteBranches"
  // ],
  //! MDX ||-------------------------------------------------------------<||
  "mdx.server.enable": true,
  "security.workspace.trust.untrustedFiles": "open",
  "diffEditor.ignoreTrimWhitespace": false,
  "files.associations": {
    "*.toml": "toml"
  },
  "files.autoSave": "onWindowChange",
  "prisma.showPrismaDataPlatformNotification": false,
  /*   ((End of managed settings.json))   */
}
